class Solution {
public:
    bool canVisitAllRooms(vector<vector<int>>& rooms) {
        int n=rooms.size();
        int vis[n+5];
        for(int i=0;i<=n;i++)vis[i]=0;
        vis[0]=1;
        for(int i=0;i<n;i++)
        {
            if(vis[i]==1&&rooms[i].size()>0)
            {
               //BFS
               queue<int>q;
               q.push(i);
               while(!q.empty())
               {
                   int f=q.front();
                   q.pop();
                   for(auto x:rooms[f])
                   {
                       if(vis[x]==0)
                       {
                           vis[x]=1;
                           q.push(x);
                       }
                   }
               }
               //BFS
            }
        }
        for(int i=0;i<n;i++)
        {
            if(vis[i]==0)return false;
        }
        return true;
    }
};