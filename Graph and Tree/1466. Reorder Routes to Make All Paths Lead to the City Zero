class Solution {
public:
    int minReorder(int n, vector<vector<int>>& connections) {
        set<pair<int,int>>st;
        vector<int>graph[n+5];
        int vis[n+5];
        for(int i=0;i<=n;i++)vis[i]=0;
        int e=connections.size();
        for(int i=0;i<e;i++)
        {
            int u=connections[i][0];
            int v=connections[i][1];
            graph[u].push_back(v);
            graph[v].push_back(u);
            st.insert({u,v});
        }
        int ans=0;
        queue<int>q;
        q.push(0);
        vis[0]=1;
        while(!q.empty())
        {
            int f=q.front();
            q.pop();
            for(auto x:graph[f])
            {
                if(vis[x]==0)
                {
                    if(st.find({x,f})==st.end())ans++;
                    q.push(x);
                    vis[x]=1;
                }
            }
        }
        return ans;
    }
};