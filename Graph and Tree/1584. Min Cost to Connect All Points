class Solution {
public:
    int minCostConnectPoints(vector<vector<int>>& points) {
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;
        int n=points.size();
        int vis[n+5];
        for(int i=0;i<=n;i++)vis[i]=0;
        pq.push({0,0});
        int ans=0;
        vis[0]=1;
        int v=0;
        while(!pq.empty())
        {
            int t=pq.top().second;
            ans+=pq.top().first;
            pq.pop();
            vis[t]=1;
            v++;
            for(int i=0;i<n;i++)
            {
                if(vis[i]==0)
                {
                    int dis=abs(points[t][0]-points[i][0])+abs(points[t][1]-points[i][1]);
                    pq.push({dis,i});
                }
            }
            while(!pq.empty()&&vis[pq.top().second])
            {
                pq.pop();
            }
            if(v==n)break;
        }
        return ans;
    }
};
//MST(Prims)