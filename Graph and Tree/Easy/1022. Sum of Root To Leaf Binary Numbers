/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
int ans=0;
    int sumRootToLeaf(TreeNode* root) {
        solve(root,"");
        return ans;
    }
    void solve(TreeNode* root,string bin)
    {
       if(root==NULL)return;
       bin+=(root->val)+'0';
       if(!root->left&&!root->right)
       {
           ans+=binToInt(bin);
       }
       solve(root->left,bin);
       solve(root->right,bin);
    }
    int binToInt(string s)
    {
        int ans=0;
        reverse(s.begin(),s.end());
        for(int i=0;i<s.size();i++)
        {
            ans+=pow(2,i)*(s[i]-'0');
        }
        return ans;
    }
};