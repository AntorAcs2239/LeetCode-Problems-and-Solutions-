class Solution {
public:
    int minScore(int n, vector<vector<int>>& roads) {
        vector<pair<int,int>>graph[n+5];
        int vis[n+5];
        int e=roads.size();
        for(int i=0;i<e;i++)
        {
            int u=roads[i][0];
            int v=roads[i][1];
            int dis=roads[i][2];
            graph[u].push_back({v,dis});
            graph[v].push_back({u,dis});
        }
        for(int i=1;i<=n;i++)vis[i]=0;
        int ans=INT_MAX;
        for(int i=1;i<=n;i++)
        {
            if(vis[i]==0)
            {
                int tem=INT_MAX;
                queue<int>q;
                q.push(i);
                vis[i]=1;
                while(!q.empty())
                {
                    int f=q.front();
                    q.pop();
                    for(auto x:graph[f])
                    {
                        if(vis[x.first]==0)
                        {
                            tem=min(tem,x.second);
                            q.push(x.first);
                            vis[x.first]=1;
                        }
                        else tem=min(tem,x.second);
                    }
                }
                if(vis[n]==1)
                {
                    ans=tem;
                    break;
                }
            }
        }
        return ans;
    }
};