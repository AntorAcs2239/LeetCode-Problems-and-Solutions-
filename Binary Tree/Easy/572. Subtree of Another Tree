/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        if(root==NULL)return false;
        bool flag=isSameTree(root,subRoot);
        if(flag)return true;
        bool f1=isSubtree(root->left,subRoot);
        bool f2=isSubtree(root->right,subRoot);
        return f1||f2;
    }
    bool isSameTree(TreeNode* p,TreeNode* q)
    {
        if(!p&&!q)return true;
        if(!p&&q)return false;
        if(p&&!q)return false;
        if(p->val!=q->val)return false;
        bool flag=isSameTree(p->left,q->left);
        bool flag2=isSameTree(p->right,q->right);
        return flag&&flag2;
    }
};