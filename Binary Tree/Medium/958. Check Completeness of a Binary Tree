/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isCompleteTree(TreeNode* root) {
        queue<TreeNode*>q;
        q.push(root);
        bool flag=true;
        while(!q.empty())
        {
            vector<int>tem;
            int qs=q.size();
            for(int k=1;k<=qs;k++)
            {
                auto x=q.front();
                q.pop();
                if(!flag&&(x->left||x->right))return false;
                if(x->left)q.push(x->left);
                else flag=false;
                if(x->right&&!flag)return false;
                else if(x->right)q.push(x->right);
                else flag=false;
            }
        }
        return true;
    }
};