/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
int index=0;
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        return constructt(preorder,inorder,0,inorder.size()-1);
    }
    TreeNode* constructt(vector<int>preorder,vector<int>inorder,int instart,int inend)
    {
        if(instart>inend)return NULL;
        TreeNode* root=new TreeNode(preorder[index++]);
        if(instart==inend)return root;
        int idx=mp(root->val,instart,inend,inorder);
        if(idx==preorder.size())idx=0;
        root->left=constructt(preorder,inorder,instart,idx-1);
        root->right=constructt(preorder,inorder,idx+1,inend);
        return root;
    }
    int mp(int v,int s,int e,vector<int>inorder)
    {
        for(int i=s;i<=e;i++)
        {
            if(inorder[i]==v)return i;
        }
        return 0;
    }
};