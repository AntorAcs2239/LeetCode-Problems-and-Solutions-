class Solution {
    public int findPeakElement(int[] nums) {
        // Get the length of the input array
        int n = nums.length;
        
        // Initialize low and high pointers for binary search
        int low = 0, high = n - 1;
        
        // Initialize a variable to store the result (peak element index)
        int ans;
        
        // Perform binary search
        while (low < high) {
            // Calculate the middle index
            int mid = (low + high) / 2;
            
            // Check if the middle element is greater than its right neighbor
            if (nums[mid] > nums[mid + 1]) {
                // If yes, set high to mid (since a peak must be on the left side)
                high = mid;
            } else {
                // If no, set low to mid + 1 (since a peak must be on the right side)
                low = mid + 1;
            }
        }
        
        // At the end of the binary search, low and high will be equal and represent the peak element
        ans = high;
        
        // Return the index of the peak element
        return ans;
    }
}
