class Solution {
public:
    bool validPath(int n, vector<vector<int>>& edges, int source, int destination) {
        queue<int>q;
        vector<bool>vis(n+5);
        vector<int>graph[n+5];
        int n1=edges.size();
        if(n1==0)return true;
        for(int i=0;i<=n;i++)vis[i]=false;
        for(int i=0;i<n1;i++)
        {
            int u=edges[i][0];
            int v=edges[i][1];
            graph[u].push_back(v);
            graph[v].push_back(u);
        }
        q.push(source);
        while(!q.empty())
        {
            int t=q.front();
            q.pop();
            for(auto x:graph[t])
            {
                if(!vis[x])
                {
                    vis[x]=true;
                    if(x==destination)return true;
                    q.push(x);
                }
            }
        }
        return false;
    }
};