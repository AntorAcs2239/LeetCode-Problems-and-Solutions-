class Solution {
public:
    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {
        int n=graph.size();
        vector<vector<int>>ans;
        queue<vector<int>>q;
        vector<int>way;
        way.push_back(0);
        q.push(way);
        while(!q.empty())
        {
            way=q.front();
            q.pop();
            int end=way[way.size()-1];
            if(end==n-1)
            {
                ans.push_back(way);
            }
            for(auto x:graph[end])
            {
                if(isvisited(way,x))
                {
                    vector<int>tem;
                    tem=way;
                    tem.push_back(x);
                    q.push(tem);
                }
            }
        }
        return ans;
    }
    bool isvisited(vector<int>way,int v)
    {
        for(int i=0;i<way.size();i++)
        {
            if(way[i]==v)return false;
        }
        return true;
    }
};