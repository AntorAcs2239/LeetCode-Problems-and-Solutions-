class Solution {
public:
    int maxValue(int n, int index, int maxSum) {
        long left=1;
        long right=maxSum;
        long mid;
        while(left<=right)
        {
            mid=(left+right)/2;
            if(check(n,mid,index+1)<=maxSum)left=mid+1;
            else right=mid-1;
        }
        return right;
    }
    long sum(long n)
    {
        return (n*(n+1))/2;
    }
    long check(long n,int idx,int index)
    {
        long left=index-1;
        long right=n-index;
        long s=idx;
        if(right>=idx-1)
        {
            long p=sum(idx-1);
            s+=p+(right-(idx-1));
        }
        else 
        {
            long p=sum(idx-1);
            long q=sum(idx-1-right);
            s+=p-q;
        }
        if(left>=idx-1)
        {
            long p=sum(idx-1);
            s+=p+(left-(idx-1));
        }
        else 
        {
            long p=sum(idx-1);
            long q=sum(idx-1-left);
            s+=p-q;
        }
        return s;
    }
};