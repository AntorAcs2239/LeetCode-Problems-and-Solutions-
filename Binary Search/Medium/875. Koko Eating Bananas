class Solution {
public:
    int minEatingSpeed(vector<int>& ar, int h) {
        long long int s=0;
        for(int i=0;i<ar.size();i++)s+=ar[i];
        long long low=s/h;
        long long high=*max_element(ar.begin(),ar.end());
        long long mid;
        while(low<=high)
        {
            mid=(low+high)/2;
            if(valid(ar,h,mid)<=h)
            {
                high=mid-1;
            }
            else low=mid+1;
        }
        return low;
    }
    long long valid(vector<int>ar,int h,long long mi)
    {
        if(mi==0)return h+1;
        long long t=0;
        for(int i=0;i<ar.size();i++)
        {
            t+=(ar[i]+mi-1)/mi;
        }
        return t;
    }
};